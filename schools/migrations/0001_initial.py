# Generated by Django 4.2.5 on 2023-10-25 00:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Chiefdom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Chiefdoms',
            },
        ),
        migrations.CreateModel(
            name='CitizenDemographics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('', 'Select a language'), ('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('age', models.CharField(max_length=3)),
                ('language', models.CharField(choices=[('', 'Select a gender'), ('English', 'English'), ('Krio', 'Krio'), ('Mende', 'Mende'), ('Themne', 'Themne'), ('Kono', 'Kono'), ('Loko', 'Loko'), ('Sherbro', 'Sherbro'), ('Limba', 'Limba'), ('Fullah', 'Fullah'), ('Koranko', 'Koranko'), ('Yalunka', 'Yalunka'), ('Madingo', 'Madingo'), ('Susu', 'Susu'), ('Vai', 'Vai'), ('Kru', 'Kru'), ('Gola', 'Gola'), ('Kissi', 'Kissi'), ('Other', 'Other')], max_length=100)),
                ('education', models.CharField(choices=[('', 'Select level of education'), ('No Schooling', 'No Schooling'), ('Informal Schooling', 'Informal Schooling'), ('Primary School', 'Primary School'), ('Completed Primary School', 'Completed Primary School'), ('Secondary School', 'Secondary School'), ('Completed Secondary School', 'Completed Secondary School'), ('Post-secondary qualifications', 'Post-secondary qualifications, other than university e.g. a diploma or degree from a polytechnic or college'), ('Attending University', 'Attending University'), ('Completed University', 'Completed University'), ('Post-graduate', 'Post-graduate'), ('Refused to answer', 'Refused to answer')], max_length=150)),
                ('occupation', models.CharField(choices=[('', 'Select an occupation'), ('Never had a job', 'Never had a job'), ('Student', 'Student'), ('Housewife / Homemaker', 'Housewife / Homemaker'), ('Agriculture / Farming / Fishing / Forestry', 'Agriculture / Farming / Fishing / Forestry'), ('Trader / Hawker / Vendor', 'Trader / Hawker / Vendor'), ('Retail / Shop', 'Retail / Shop'), ('Unskilled manual worker', 'Unskilled manual worker (e.g. cleaner, laborer, domestic help, unskilled manufacturing worker)'), ('Artisan or skilled manual worker', 'Artisan or skilled manual worker (e.g. trades like electrician, mechanic, machinist, or skilled manufacturing worker)'), ('Clerical or secretarial', 'Clerical or secretarial'), ('Supervisor / Foreman / Senior manager', 'Supervisor / Foreman / Senior manager'), ('Security services', 'Security services (police, army, private security)'), ('Mid-level professional', 'Mid-level professional (e.g. teacher, nurse, mid-level government officer)'), ('Upper-level professional', 'Upper-level professional (e.g. banker / finance, doctor, lawyer, engineer, accountant, professor, senior-level government officer)'), ('Other', 'Other')], max_length=250)),
                ('chiefdom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.chiefdom')),
            ],
            options={
                'verbose_name_plural': 'Citizen Demographics',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Districts',
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Service Type',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chiefdom', models.CharField(max_length=255)),
                ('town_or_village_name', models.CharField(max_length=255)),
                ('school_name', models.CharField(max_length=250)),
                ('total_girl_students', models.PositiveIntegerField(default=0)),
                ('total_boy_students', models.PositiveIntegerField(default=0)),
                ('total_female_teachers', models.PositiveIntegerField(default=0)),
                ('total_male_teachers', models.PositiveIntegerField(default=0)),
                ('total_qualified_teachers', models.PositiveIntegerField(default=0)),
                ('total_untrained_teachers', models.PositiveIntegerField(default=0)),
                ('total_teachers_with_pin_code', models.PositiveIntegerField(default=0)),
                ('total_teachers_without_pin_code', models.PositiveIntegerField(default=0)),
                ('shifts_per_day', models.PositiveIntegerField(default=0)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.district', verbose_name='School District')),
            ],
            options={
                'verbose_name_plural': 'Schools',
            },
        ),
        migrations.CreateModel(
            name='SatisfactionSurvey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_of_satisfactory', models.CharField(blank=True, choices=[('', 'Select level of satisfaction'), ('Very Satisfied', 'Very Satisfied'), ('Somewhat Satisfied', 'Somewhat Satisfied'), ('Very Dissatisfied', 'Very Dissatisfied'), ('Somewhat Dissatisfied', 'Somewhat Dissatisfied'), ('Neither', 'Neither')], max_length=255, null=True, verbose_name='How satisfied are you with these services?')),
                ('easy_or_difficulty_to_access_medical_facilities', models.TextField(blank=True, choices=[('', 'Select access to health facilities'), ('Very easy', 'Very easy'), ('Somewhat easy', 'Somewhat easy'), ('Somewhat difficult', 'Somewhat difficult'), ('Very difficult', 'Very difficult'), ("Don't know ", "Don't know ")], max_length=100, null=True, verbose_name='How easy or difficult is it to obtain the medical care you and your family need by government health facilities?')),
                ('date_submitted', models.DateField(auto_now_add=True)),
                ('citizen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.citizendemographics')),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.servicetype')),
            ],
        ),
        migrations.CreateModel(
            name='LocalCouncil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.district')),
            ],
            options={
                'verbose_name_plural': 'Local Councils',
            },
        ),
        migrations.AddField(
            model_name='citizendemographics',
            name='district',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.district'),
        ),
        migrations.AddField(
            model_name='chiefdom',
            name='district',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.district'),
        ),
    ]
